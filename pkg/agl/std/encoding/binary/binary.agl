package binary

type MaxVarintLen16 int
type MaxVarintLen32 int
type MaxVarintLen64 int

type ByteOrder interface {}
type AppendByteOrder interface {}

func Append(buf []byte, order binary.ByteOrder, data any) ([]byte)!
func AppendUvarint(buf []byte, x uint64) []byte
func AppendVarint(buf []byte, x int64) []byte
func Decode(buf []byte, order binary.ByteOrder, data any) int!
func Encode(buf []byte, order binary.ByteOrder, data any) int!
func PutUvarint(buf []byte, x uint64) int
func PutVarint(buf []byte, x int64) int
func Read(r io.Reader, order binary.ByteOrder, data any) !
func ReadUvarint(r io.ByteReader) uint64!
func ReadVarint(r io.ByteReader) int64!
func Size(v any) int
func Uvarint(buf []byte) (uint64, int)
func Varint(buf []byte) (int64, int)
func Write(w io.Writer, order binary.ByteOrder, data any) !