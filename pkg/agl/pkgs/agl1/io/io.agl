package io

type EOF struct{}
type Reader struct{}
type ReadCloser interface{
    Close() !
}
type RuneReader interface{}
type Seeker interface{}
type StringWriter interface{}
type WriteCloser interface{}
type WriteSeeker interface{}
type Writer interface{}

func MultiWriter(writers ...Writer) Writer
func ReadAll(r Reader) ([]byte)!
func ReadFull(r Reader, buf []byte) int!
func WriteString(w Writer, s string) int!
func CopyBuffer(dst Writer, src Reader, buf []byte) int64!
func CopyN(dst Writer, src Reader, n int64) int64!
func Copy(dst Writer, src Reader) int64!
//func Pipe(*PipeReader, *PipeWriter)
func (ReadCloser) Read(p []byte) int!
//func (ReadCloser) Close() !