package base64

import "agl1/io"

type CorruptInputError int64
type Encoding struct {}

func NewDecoder(enc *Encoding, r io.Reader) io.Reader
func NewEncoder(enc *Encoding, w io.Writer) io.WriteCloser

//func (e CorruptInputError) Error() string

func NewEncoding(encoder string) *Encoding
func (enc *Encoding) AppendDecode(dst, src []byte) ([]byte)!
func (enc *Encoding) AppendEncode(dst, src []byte) []byte
func (enc *Encoding) Decode(dst, src []byte) int!
func (enc *Encoding) DecodeString(s string) ([]byte)!
func (enc *Encoding) DecodedLen(n int) int
func (enc *Encoding) Encode(dst, src []byte)
func (enc *Encoding) EncodeToString(src []byte) string
func (enc *Encoding) EncodedLen(n int) int
func (enc Encoding) Strict() *Encoding
func (enc Encoding) WithPadding(padding rune) *Encoding