package main

import (
    "agl1/os"
    "agl1/fmt"
)

func gen_blocks(diskMap string) []uint? {
    diskMap.Split("").Enumerated().FlatMap({
        n := $0.1.Int()?
        i := $0.0
        file_id := if i % 2 == 0 { Some(uint(i/2)) } else { None }
        var mut out []uint?
        for j := 0; j < n; j++ {
            out.Push(file_id)
        }
        return out
    })
}


func reorder(mut blocks []uint?) {
    mut p1 := 0;
    mut p2 := blocks.Len() - 1;
    for p1 <= p2 {
        if blocks[p1].IsSome() {
            p1++
        } else if blocks[p2].IsNone() {
            p2--
        } else {
            blocks.Swap(p1, p2)
            p1++
            p2--
        }
    }
}

func checksum(blocks []uint?) uint {
    blocks.Enumerated().FilterMap(|t| { t.1.Map({ $0 * uint(t.0) }) }).Sum()
}

func main() {
    fileContent := string(os.ReadFile("examples/adventOfCode2024/day9/data.txt")!)
    mut blocks := gen_blocks(fileContent)
    reorder(mut blocks)
    fmt.Println("part1:", checksum(blocks))
}